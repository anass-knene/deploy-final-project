{"version":3,"file":"static/js/542.2a94d343.chunk.js","mappings":"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","sources":["assets/img/waiter-smile.svg","components/freelancer/freelancer-profile/FreelancerView.js","graphQL/Mutations.js","graphQL/Queries.js"],"sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWaiterSmile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    style: {\n      enableBackground: \"new 0 0 139.149 271.664\"\n    },\n    viewBox: \"0 0 139.149 271.664\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.852,91.449c-5.6-5.263-11.072-6.175-13.893-6.244c-0.166-0.011-0.331-0.025-0.5-0.025h-6.475    c-0.907,9.119-5.69,53.862-12.842,61.014C81.991,139.042,77.208,94.299,76.3,85.18h-6.475c-0.63,0-1.238,0.083-1.824,0.225    c-5.659,0.977-10.916,5.73-16.899,11.153c-2.823,2.558-7.698,6.976-10.579,8.525c-0.809-2.251-2.073-8.021-1.634-21.633    c0.143-4.416-3.322-8.111-7.738-8.254c-4.423-0.162-8.112,3.322-8.253,7.738c-0.733,22.715,2.396,33.566,10.799,37.455    c1.886,0.873,3.764,1.259,5.629,1.259c7.916-0.001,15.593-6.957,22.521-13.235c0.081-0.073,0.167-0.151,0.25-0.227v151.114    c0,6.83,5.537,12.363,12.363,12.363c6.828,0,12.365-5.533,12.365-12.363v-90.271h4.635v90.271c0,6.83,5.537,12.363,12.363,12.363    c6.828,0,12.365-5.533,12.365-12.363V109.274c4.47,9.298,8.452,28.029,6.397,63.166c-0.258,4.41,3.108,8.195,7.519,8.453    c0.159,0.01,0.317,0.014,0.475,0.014c4.205,0,7.73-3.281,7.979-7.533C141.029,131.127,135.745,103.563,122.852,91.449z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.143,79.481c12.428,0,22.5-10.073,22.5-22.5c0-12.427-10.072-22.5-22.5-22.5c-12.426,0-22.5,10.073-22.5,22.5    C66.643,69.408,76.717,79.481,89.143,79.481z M101.008,62.905c0,0-6.287,19.564-21.908,5.93    C79.099,68.835,93.192,69.535,101.008,62.905z\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"88.143,89.551 81.143,85.551 81.143,94.551 88.143,90.551   \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"90.143,90.551 97.143,94.551 97.143,85.551 90.143,89.551   \"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 89.143,\n    cy: 98.051,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 89.143,\n    cy: 108.932,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 89.143,\n    cy: 119.813,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 89.143,\n    cy: 130.694,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.944,69.63c0-1.75-1.418-3.168-3.166-3.168H3.166C1.417,66.462,0,67.88,0,69.63c0,1.748,1.417,3.166,3.166,3.166    h55.612C60.526,72.796,61.944,71.378,61.944,69.63z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.64,63.794c0-9.499-8.685-17.371-20.028-18.776c0.633-0.797,1.027-1.792,1.027-2.888c0-2.578-2.089-4.668-4.666-4.668    c-2.577,0-4.667,2.09-4.667,4.668c0,1.096,0.394,2.091,1.028,2.888C15.99,46.424,7.306,54.295,7.306,63.794H54.64z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.151,2.38c0.967-0.928,0.037-3.088-0.941-2.148c-2.441,2.344-4.283,5.684-4.682,9.703    c-0.429,4.332,2.77,7.113,3.129,11.18c0.242,2.738-1.037,5.736-2.502,7.56c-0.883,1.096,0.442,2.852,1.318,1.758    c2.455-3.053,3.527-7.471,2.717-11.805c-0.807-4.315-3.883-6.391-2.219-11.311C21.618,5.404,22.874,3.607,24.151,2.38z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.591,21.115c0.242,2.738-1.037,5.736-2.502,7.56c-0.883,1.096,0.439,2.852,1.318,1.758    c2.455-3.053,3.527-7.471,2.717-11.805c-0.807-4.315-3.883-6.391-2.221-11.311c0.647-1.914,1.905-3.711,3.18-4.938    c0.967-0.928,0.037-3.088-0.941-2.148c-2.44,2.344-4.283,5.684-4.682,9.703C29.032,14.267,32.229,17.048,32.591,21.115z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.015,2.38c0.969-0.928,0.039-3.088-0.939-2.148c-2.441,2.344-4.283,5.684-4.682,9.703    c-0.43,4.332,2.768,7.113,3.129,11.18c0.242,2.738-1.037,5.736-2.502,7.56c-0.883,1.096,0.441,2.852,1.318,1.758    c2.455-3.053,3.527-7.471,2.717-11.805c-0.805-4.315-3.883-6.391-2.219-11.311C43.483,5.404,44.739,3.607,46.015,2.38z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWaiterSmile);\nexport default __webpack_public_path__ + \"static/media/waiter-smile.9505631e98e5a8cd14ab0d5116895524.svg\";\nexport { ForwardRef as ReactComponent };","//Native imports\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\n//External Imports\r\nimport emailjs from \"@emailjs/browser\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ImHeart } from \"react-icons/im\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\n//Internal Imports\r\nimport { MyContext } from \"../../../Context/Context\";\r\nimport \"../../../styles/freelancerView.scss\";\r\nimport { COMPANY_FAVORITE, DELETE_COMPANY_FAVORITE, } from \"../../../graphQL/Mutations\";\r\nimport { GET_ONE_COMPANY } from \"../../../graphQL/Queries\";\r\nimport waiterSmile from \"../../../assets/img/waiter-smile.svg\";\r\n\r\n\r\n\r\nexport default function FreelancerView() {\r\n  const { freelancerFind, companyLoginData, isCompanyLogin } = useContext(MyContext);\r\n  const [companyFavorite, setCompanyFavorite] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n\r\n\r\n  let storeId = companyLoginData.favorite.filter(\r\n    (item) => item.id === freelancerFind.id\r\n\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (storeId.length > 0) {\r\n      setCompanyFavorite(true);\r\n    } else {\r\n      setCompanyFavorite(false);\r\n    }\r\n  }, [storeId]);\r\n\r\n  // we need to filter the freelancerFind state to make companyFavorite true\r\n  let { first_name, last_name, hourly_rate, email, phone, avatar, id } =\r\n    freelancerFind;\r\n  const [updateCompanyFavorite, { data1, loading1, error1 }] = useMutation(\r\n    COMPANY_FAVORITE,\r\n    {\r\n      refetchQueries: [\r\n        {\r\n          query: GET_ONE_COMPANY,\r\n          variables: { getOneCompanyId: companyLoginData.id },\r\n        },\r\n      ],\r\n      awaitRefetchQueries: true,\r\n    }\r\n  );\r\n\r\n  const favoriteBtn = () => {\r\n    updateCompanyFavorite({\r\n      variables: {\r\n        userId: id,\r\n        companyId: companyLoginData.id,\r\n      },\r\n    }).then((res) => {\r\n      if (res.data) {\r\n        Swal.fire({\r\n          position: \"top\",\r\n          icon: \"success\",\r\n          title: `${first_name} added in favorites!`,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n        setCompanyFavorite(true);\r\n      }\r\n      if (error1) {\r\n        Swal.fire({\r\n          position: \"top\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const [deleteCompanyFavorite, { data2, loading2, error2 }] = useMutation(\r\n    DELETE_COMPANY_FAVORITE,\r\n    {\r\n      refetchQueries: [\r\n        {\r\n          query: GET_ONE_COMPANY,\r\n          variables: { getOneCompanyId: companyLoginData.id },\r\n        },\r\n      ],\r\n      awaitRefetchQueries: true,\r\n    }\r\n  );\r\n\r\n  const deleteFavoriteBtn = () => {\r\n    deleteCompanyFavorite({\r\n      variables: {\r\n        userId: id,\r\n        companyId: companyLoginData.id,\r\n      },\r\n    }).then((res) => {\r\n      if (res.data) {\r\n        Swal.fire({\r\n          position: \"top\",\r\n          icon: \"success\",\r\n          title: `${first_name} removed from favorites!`,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n        setCompanyFavorite(false);\r\n      }\r\n      if (error2) {\r\n        Swal.fire({\r\n          position: \"top\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n    if (isCompanyLogin) {\r\n      emailjs\r\n        .sendForm(\r\n          process.env.REACT_APP_EMAILJS_SERVICE_ID,\r\n          process.env.REACT_APP_EMAILJS_TEMPLATE_ID_TWO,\r\n          e.target,\r\n          process.env.REACT_APP_EMAILJS_USER_ID\r\n        )\r\n        .then((result) => {\r\n          // console.log(result.status);\r\n          if (result.status === 200) {\r\n            setEmailSent(true);\r\n          } else {\r\n            Swal.fire({\r\n              position: \"top\",\r\n              icon: \"error\",\r\n              title: \"Your email was not Sent\",\r\n              showConfirmButton: false,\r\n              timer: 2000,\r\n            });\r\n          }\r\n        });\r\n\r\n      e.target.reset();\r\n      setEmailSent(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"freelancerView\">\r\n      <div className=\"freelancerViewContainer\">\r\n        <div className=\"\">\r\n\r\n          <div className=\"mt-5 text-center\">\r\n\r\n            <div className=\"FavoriteDiv m-3\">\r\n              <button\r\n                className=\"iconBtn\"\r\n                onClick={!companyFavorite ? favoriteBtn : deleteFavoriteBtn}\r\n              >\r\n                <ImHeart\r\n                  className={\r\n                    companyFavorite\r\n                      ? \"iconHeart Favorite me-2\"\r\n                      : \"iconHeart notFavorite me-2\"\r\n                  }\r\n                  size=\"35px\"\r\n                />\r\n              </button>\r\n              <strong>Add to Favorites</strong>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div>\r\n            {emailSent ? (\r\n              <div className=\"alert text-center\" role=\"alert\">\r\n                Your message was sent!\r\n                <img alt=\"\" src={waiterSmile} width=\"150\" height=\"150\" className=\"\" />\r\n              </div>\r\n            ) : (\r\n              //freelancer data\r\n              <div className=\"container contact-form-freelancer contactFormContainer   animate__animated animate__fadeInDownBig  \">\r\n                <form onSubmit={sendEmail}>\r\n                  <div className=\"d-flex justify-content-between mb-3 d-none \">\r\n                    <div className=\"w-100\" >\r\n                      <div className=\"form-group col-auto \">\r\n                        <label htmlFor=\"name\">Freelancer Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"to_name\"\r\n                          className=\"form-control col-auto\"\r\n                          defaultValue={first_name + \" \" + last_name}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-auto\">\r\n                        <label htmlFor=\"email\">Freelancer Email</label>\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"to_email\"\r\n                          className=\"form-control\"\r\n                          defaultValue={email}\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  {/* company data */}\r\n                  <div className=\"d-flex justify-content-between\">\r\n\r\n                    <div className=\"w-100\">\r\n                      <div className=\"form-group col-auto\">\r\n                        <label htmlFor=\"name\">Your Company Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"from_company_name\"\r\n                          className=\"form-control\"\r\n                          defaultValue={`${companyLoginData.company_Name}`}\r\n                          maxLength=\"50\"\r\n                          required\r\n                          readOnly\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-auto\">\r\n                        <label htmlFor=\"name\">Your Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"from_name\"\r\n                          className=\"form-control\"\r\n                          defaultValue={`${companyLoginData.owner_name}`}\r\n                          maxLength=\"50\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-auto\">\r\n                        <label htmlFor=\"email\">Your Email Address</label>\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"from_email\"\r\n                          className=\"form-control\"\r\n                          defaultValue={companyLoginData.email}\r\n                          maxLength=\"50\"\r\n                        />\r\n\r\n                      </div>\r\n\r\n                      <div className=\"form-row\">\r\n                        <div className=\"form-group col-auto\">\r\n                          <label htmlFor=\"phone\">Your Contact Number</label>\r\n                          <input\r\n                            type=\"tel\"\r\n                            name=\"from_phone\"\r\n                            className=\"form-control\"\r\n                            defaultValue={companyLoginData.phone}\r\n                            maxLength=\"20\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div className=\"form-row mb-3\">\r\n                    <div className=\"form-group col-auto \">\r\n                      <label htmlFor=\"message\">Your Message</label>\r\n                      <textarea\r\n                        type=\"textarea\"\r\n                        name=\"from_message\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Message\"\r\n                        required\r\n                        rows={5}\r\n                        maxLength={500}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-end m-2\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-outline-secondary col-3 \"\r\n                      value=\"Send\"\r\n                    >\r\n                      Send\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { gql } from \"@apollo/client\";\r\n//COMPANY MUTATIONS\r\n//add company\r\nexport const CREATE_COMPANY_MUTATION = gql`\r\n  mutation AddCompany(\r\n    $company_Name: String!\r\n    $owner_name: String!\r\n    $company_type: String!\r\n    $address: String!\r\n    $phone: String!\r\n    $email: String!\r\n    $password: String!\r\n    $description: String!\r\n  ) {\r\n    addCompany(\r\n      company_Name: $company_Name\r\n      owner_name: $owner_name\r\n      company_type: $company_type\r\n      address: $address\r\n      phone: $phone\r\n      email: $email\r\n      password: $password\r\n      description: $description\r\n    ) {\r\n      company_Name\r\n      owner_name\r\n      company_type\r\n      address\r\n      phone\r\n      email\r\n      password\r\n      description\r\n    }\r\n  }\r\n`;\r\n//login as company\r\nexport const COMPANY_LOGIN = gql`\r\n  mutation LoginCompany($email: String!, $password: String!) {\r\n    loginCompany(email: $email, password: $password) {\r\n      token\r\n      tokenExpiration\r\n      company {\r\n        id\r\n        company_Name\r\n        owner_name\r\n        avatar\r\n        company_type\r\n        address\r\n        phone\r\n        email\r\n        description\r\n        favorite {\r\n          first_name\r\n          last_name\r\n          avatar\r\n          email\r\n          description\r\n        }\r\n        jobs {\r\n          id\r\n          job_Title\r\n          num_of_people_needed\r\n          job_description\r\n          issued_At\r\n          start_Date\r\n          end_Date\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n//Delete Company\r\nexport const DELETE_COMPANY = gql`\r\n  mutation DeleteCompany($deleteCompanyId: ID) {\r\n    deleteCompany(id: $deleteCompanyId) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n//update Company\r\nexport const UPDATE_COMPANY = gql`\r\n  mutation UpdateCompany(\r\n    $updateCompanyId: ID!\r\n    $companyName: String\r\n    $ownerName: String\r\n    $file: Upload\r\n    $companyType: String\r\n    $address: String\r\n    $phone: String\r\n    $email: String\r\n    $password: String\r\n    $description: String\r\n  ) {\r\n    updateCompany(\r\n      id: $updateCompanyId\r\n      company_Name: $companyName\r\n      owner_name: $ownerName\r\n      file: $file\r\n      company_type: $companyType\r\n      address: $address\r\n      phone: $phone\r\n      email: $email\r\n      password: $password\r\n      description: $description\r\n    ) {\r\n      id\r\n      company_Name\r\n      owner_name\r\n      avatar\r\n      company_type\r\n      address\r\n      phone\r\n      email\r\n      password\r\n      description\r\n    }\r\n  }\r\n`;\r\nexport const COMPANY_FAVORITE = gql`\r\n  mutation updateCompanyFavorite($userId: ID!, $companyId: ID!) {\r\n    updateCompanyFavorite(userId: $userId, companyId: $companyId) {\r\n      id\r\n      company_Name\r\n      owner_name\r\n      avatar\r\n      company_type\r\n      address\r\n      phone\r\n      email\r\n      password\r\n      description\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_COMPANY_FAVORITE = gql`\r\n  mutation DeleteCompanyFavorite($companyId: ID!, $userId: ID!) {\r\n    deleteCompanyFavorite(companyId: $companyId, userId: $userId) {\r\n      id\r\n      company_Name\r\n      owner_name\r\n      avatar\r\n      company_type\r\n      address\r\n      phone\r\n      email\r\n      password\r\n      description\r\n    }\r\n  }\r\n`;\r\nexport const CREATE_USER_MUTATION = gql`\r\n  mutation addUser(\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $phone: String!\r\n    $email: String!\r\n    $password: String!\r\n    $hourly_rate: Int!\r\n    $description: String!\r\n  ) {\r\n    addUser(\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      phone: $phone\r\n      email: $email\r\n      password: $password\r\n      hourly_rate: $hourly_rate\r\n      description: $description\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_FAVORITE = gql`\r\n  mutation updateUserFavorite($userId: ID!, $job: JobInputType) {\r\n    updateUserFavorite(userId: $userId, job: $job) {\r\n      id\r\n      first_name\r\n      last_name\r\n      email\r\n      favorite {\r\n        job_Title\r\n        start_Date\r\n        end_Date\r\n        issued_At\r\n        created_by {\r\n          company_Name\r\n          company_type\r\n          email\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//login as user\r\nexport const USER_LOGIN = gql`\r\n  mutation LoginUser($email: String!, $password: String!) {\r\n    loginUser(email: $email, password: $password) {\r\n      token\r\n      tokenExpiration\r\n      user {\r\n        first_name\r\n        last_name\r\n        avatar\r\n        email\r\n        phone\r\n        password\r\n        hourly_rate\r\n        description\r\n        id\r\n        favorite {\r\n          id\r\n          job_Title\r\n          start_Date\r\n          end_Date\r\n          num_of_people_needed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n//Delete User\r\nexport const DELETE_USER = gql`\r\n  mutation DeleteUser($deleteUserId: ID) {\r\n    deleteUser(id: $deleteUserId) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n//Delete User\r\nexport const UPDATE_USER = gql`\r\n  mutation UpdateUser(\r\n    $updateUserId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $file: Upload\r\n    $email: String\r\n    $password: String\r\n    $phone: String\r\n    $hourlyRate: Int\r\n    $description: String\r\n  ) {\r\n    updateUser(\r\n      id: $updateUserId\r\n      first_name: $firstName\r\n      last_name: $lastName\r\n      file: $file\r\n      email: $email\r\n      password: $password\r\n      phone: $phone\r\n      hourly_rate: $hourlyRate\r\n      description: $description\r\n    ) {\r\n      id\r\n      first_name\r\n      last_name\r\n      avatar\r\n      email\r\n      phone\r\n      password\r\n      hourly_rate\r\n      description\r\n    }\r\n  }\r\n`;\r\n//Job Mutations\r\nexport const CREATE_JOB = gql`\r\n  mutation AddJob(\r\n    $jobTitle: String!\r\n    $startDate: String!\r\n    $endDate: String!\r\n    $numOfPeopleNeeded: Int!\r\n    $jobDescription: String!\r\n    $createdBy: ID!\r\n  ) {\r\n    addJob(\r\n      job_Title: $jobTitle\r\n      start_Date: $startDate\r\n      end_Date: $endDate\r\n      num_of_people_needed: $numOfPeopleNeeded\r\n      job_description: $jobDescription\r\n      created_by: $createdBy\r\n    ) {\r\n      job_Title\r\n      start_Date\r\n      end_Date\r\n      num_of_people_needed\r\n      job_description\r\n      created_by {\r\n        company_Name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//Delete User\r\nexport const DELETE_JOB = gql`\r\n  mutation DeleteJob($deleteJobId: ID) {\r\n    deleteJob(id: $deleteJobId) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\n//Delete User\r\nexport const UPDATE_JOB = gql`\r\n  mutation UpdateJob(\r\n    $updateJobId: ID!\r\n    $jobTitle: String\r\n    $startDate: String\r\n    $endDate: String\r\n    $numOfPeopleNeeded: Int\r\n    $jobDescription: String\r\n  ) {\r\n    updateJob(\r\n      id: $updateJobId\r\n      job_Title: $jobTitle\r\n      start_Date: $startDate\r\n      end_Date: $endDate\r\n      num_of_people_needed: $numOfPeopleNeeded\r\n      job_description: $jobDescription\r\n    ) {\r\n      id\r\n      job_Title\r\n      start_Date\r\n      end_Date\r\n      num_of_people_needed\r\n      job_description\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\n//user query\r\nexport const GET_ONE_USER = gql`\r\n  query GetOneUser($getOneUserId: ID) {\r\n    getOneUser(id: $getOneUserId) {\r\n      id\r\n      first_name\r\n      last_name\r\n      avatar\r\n      email\r\n      phone\r\n      password\r\n      hourly_rate\r\n      description\r\n      favorite {\r\n        id\r\n        job_Title\r\n        job_description\r\n        end_Date\r\n        start_Date\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const GET_USERS = gql`\r\n  query GetUsers {\r\n    getUsers {\r\n      id\r\n      first_name\r\n      last_name\r\n      avatar\r\n      email\r\n      phone\r\n      password\r\n      hourly_rate\r\n      description\r\n      favorite {\r\n        id\r\n        job_Title\r\n        job_description\r\n        end_Date\r\n        start_Date\r\n      }\r\n    }\r\n  }\r\n`;\r\n//company query\r\nexport const GET_ONE_COMPANY = gql`\r\n  query GetOneCompany($getOneCompanyId: ID) {\r\n    getOneCompany(id: $getOneCompanyId) {\r\n      id\r\n      company_Name\r\n      owner_name\r\n      avatar\r\n      company_type\r\n      address\r\n      phone\r\n      email\r\n      password\r\n      description\r\n      favorite {\r\n        id\r\n        first_name\r\n        last_name\r\n        avatar\r\n        email\r\n        description\r\n      }\r\n      jobs {\r\n        id\r\n        job_Title\r\n        start_Date\r\n        end_Date\r\n        num_of_people_needed\r\n        job_description\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const GET_COMPANIES = gql`\r\n  query GetCompanies {\r\n    getCompanies {\r\n      id\r\n      company_Name\r\n      owner_name\r\n      avatar\r\n      company_type\r\n      address\r\n      phone\r\n      email\r\n      password\r\n      description\r\n      favorite {\r\n        id\r\n        first_name\r\n        last_name\r\n        avatar\r\n        email\r\n        description\r\n      }\r\n      jobs {\r\n        id\r\n        job_Title\r\n        start_Date\r\n        end_Date\r\n        num_of_people_needed\r\n        job_description\r\n      }\r\n    }\r\n  }\r\n`;\r\n//job queries\r\nexport const GET_ONE_JOB = gql`\r\n  query GetOneJob($getOneJobId: ID) {\r\n    getOneJob(id: $getOneJobId) {\r\n      id\r\n      job_Title\r\n      issued_At\r\n      num_of_people_needed\r\n      job_description\r\n      created_by {\r\n        company_Name\r\n        email\r\n        avatar\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const GET_JOBS = gql`\r\n  query GetJobs {\r\n    getJobs {\r\n      id\r\n      job_Title\r\n      start_Date\r\n      end_Date\r\n      issued_At\r\n      num_of_people_needed\r\n      job_description\r\n      created_by {\r\n        company_Name\r\n        email\r\n        avatar\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["FreelancerView","useContext","MyContext","freelancerFind","companyLoginData","isCompanyLogin","useState","companyFavorite","setCompanyFavorite","emailSent","setEmailSent","storeId","favorite","filter","item","id","useEffect","length","first_name","last_name","email","hourly_rate","phone","avatar","useMutation","COMPANY_FAVORITE","refetchQueries","query","GET_ONE_COMPANY","variables","getOneCompanyId","awaitRefetchQueries","updateCompanyFavorite","error1","data1","loading1","DELETE_COMPANY_FAVORITE","deleteCompanyFavorite","error2","data2","loading2","className","onClick","userId","companyId","then","res","data","Swal","position","icon","title","showConfirmButton","timer","size","role","alt","src","waiterSmile","width","height","onSubmit","e","preventDefault","emailjs","process","REACT_APP_EMAILJS_SERVICE_ID","REACT_APP_EMAILJS_TEMPLATE_ID_TWO","target","REACT_APP_EMAILJS_USER_ID","result","status","reset","htmlFor","type","name","defaultValue","readOnly","company_Name","maxLength","required","owner_name","placeholder","rows","value","CREATE_COMPANY_MUTATION","gql","COMPANY_LOGIN","DELETE_COMPANY","UPDATE_COMPANY","CREATE_USER_MUTATION","USER_FAVORITE","USER_LOGIN","DELETE_USER","UPDATE_USER","CREATE_JOB","DELETE_JOB","UPDATE_JOB","GET_ONE_USER","GET_USERS","GET_JOBS"],"sourceRoot":""}