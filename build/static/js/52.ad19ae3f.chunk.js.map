{"version":3,"file":"static/js/52.ad19ae3f.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@apollo/src/react/hooks/useApolloClient.ts","../node_modules/@apollo/src/react/hooks/useMutation.ts","../node_modules/@apollo/src/react/parser/index.ts"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n    'instance in via options.',\n  );\n\n  return client;\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n} from '../types/types';\n\nimport {\n  ApolloCache,\n  DefaultContext,\n  mergeOptions,\n  OperationVariables,\n} from '../../core';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext>,\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = useState<Omit<MutationResult, 'reset'>>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = useCallback((\n    executeOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {}\n  ) => {\n    const {client, options, mutation} = ref.current;\n    const baseOptions = { ...options, mutation };\n    if (!ref.current.result.loading && !baseOptions.ignoreResults) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client,\n      });\n    }\n\n    const mutationId = ++ref.current.mutationId;\n    const clientOptions = mergeOptions(\n      baseOptions,\n      executeOptions as any,\n    );\n\n    return client.mutate(clientOptions).then((response) => {\n      const { data, errors } = response;\n      const error =\n        errors && errors.length > 0\n          ? new ApolloError({ graphQLErrors: errors })\n          : void 0;\n\n      if (\n        mutationId === ref.current.mutationId &&\n        !clientOptions.ignoreResults\n      ) {\n        const result = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client,\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      baseOptions.onCompleted?.(response.data!);\n      executeOptions.onCompleted?.(response.data!);\n      return response;\n    }).catch((error) => {\n      if (\n        mutationId === ref.current.mutationId &&\n        ref.current.isMounted\n      ) {\n        const result = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client,\n        };\n\n        if (!equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      if (baseOptions.onError || clientOptions.onError) {\n        baseOptions.onError?.(error);\n        executeOptions.onError?.(error);\n        // TODO(brian): why are we returning this here???\n        return { data: void 0, errors: error };\n      }\n\n      throw error;\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    setResult({ called: false, loading: false, client });\n  }, []);\n\n  useEffect(() => () => {\n    ref.current.isMounted = false;\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a ${requiredOperationName} requires a graphql ` +\n      `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n  );\n}\n\n"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","ref","bsPrefix","className","contentClassName","centered","fullscreen","children","scrollable","props","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","classNames","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","closeButton","DivStyledAsH4","divWithClassName","Component","show","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","Dialog","ariaLabelledby","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","useState","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","value","BaseModal","preventDefault","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","useApolloClient","override","context","useContext","getApolloContext","client","__DEV__","invariant","useMutation","mutation","options","verifyDocumentType","DocumentType","called","loading","result","setResult","mutationId","isMounted","execute","executeOptions","baseOptions","ignoreResults","error","data","clientOptions","mergeOptions","mutate","then","response","errors","length","ApolloError","graphQLErrors","result_1","equal","onCompleted","_a","_b","catch","result_2","onError","reset","useEffect","__assign","cache","Map","operationName","type","name","Query","Mutation","Subscription","operation","variables","cached","get","concat","fragments","definitions","filter","x","kind","queries","mutations","subscriptions","definition","variableDefinitions","payload","requiredOperationName"],"sourceRoot":""}